"""add bot types and documents

Revision ID: 28159f9aeffc
Revises: e859a87e9bde
Create Date: 2024-05-23 15:24:05.225090

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "28159f9aeffc"
down_revision: Union[str, None] = "e859a87e9bde"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bot_documents",
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "doc_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("bot_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["bot_id"],
            ["bots.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column("bot_contexts", "bot_id", existing_type=sa.UUID(), nullable=False)
    op.add_column(
        "bots",
        sa.Column(
            "bot_type",
            sa.Enum("chatbot", "rag", name="bottype", native_enum=False, length=36),
            server_default="chatbot",
            nullable=False,
        ),
    )
    op.add_column(
        "bots",
        sa.Column(
            "bot_model",
            sa.Enum(
                "gpt_4o",
                "gpt_4_turbo",
                name="botmodeltypes",
                native_enum=False,
                length=36,
            ),
            server_default="gpt_4o",
            nullable=False,
        ),
    )
    op.add_column(
        "bots",
        sa.Column("temperature", sa.Integer(), server_default="50", nullable=False),
    )
    op.add_column(
        "bots", sa.Column("top_p", sa.Integer(), server_default="100", nullable=False)
    )
    op.add_column(
        "bots",
        sa.Column("max_tokens", sa.Integer(), server_default="4096", nullable=False),
    )
    op.add_column("bots", sa.Column("data_indexed", sa.Boolean(), nullable=True))
    op.alter_column(
        "bots",
        "data_source",
        existing_type=sa.VARCHAR(length=100),
        type_=sa.Enum(
            "text", "uploads", "web", name="botdatasource", native_enum=False, length=36
        ),
        existing_nullable=True,
    )
    op.create_index(op.f("ix_bots_bot_type"), "bots", ["bot_type"], unique=False)
    op.create_index(
        op.f("ix_bots_data_indexed"), "bots", ["data_indexed"], unique=False
    )
    op.create_index(op.f("ix_bots_data_source"), "bots", ["data_source"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_bots_data_source"), table_name="bots")
    op.drop_index(op.f("ix_bots_data_indexed"), table_name="bots")
    op.drop_index(op.f("ix_bots_bot_type"), table_name="bots")
    op.alter_column(
        "bots",
        "data_source",
        existing_type=sa.Enum(
            "text", "uploads", "web", name="botdatasource", native_enum=False, length=36
        ),
        type_=sa.VARCHAR(length=100),
        existing_nullable=True,
    )
    op.drop_column("bots", "data_indexed")
    op.drop_column("bots", "max_tokens")
    op.drop_column("bots", "top_p")
    op.drop_column("bots", "temperature")
    op.drop_column("bots", "bot_model")
    op.drop_column("bots", "bot_type")
    op.alter_column("bot_contexts", "bot_id", existing_type=sa.UUID(), nullable=True)
    op.drop_table("bot_documents")
    # ### end Alembic commands ###
