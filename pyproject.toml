[tool.poetry]
name = "llm-api"
version = "0.1.0"
description = ""
authors = ["Philip Adzanoukpe <epigos@gmail.com>"]
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = "^0.29.0"
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"
langchain = "^0.2.0"
alembic = "^1.13.1"
sqlalchemy = { extras = ["mypy"], version = "^2.0.30" }
asyncpg = "^0.29.0"
structlog = "^24.1.0"
langchain-openai = "^0.1.7"
redis = "^5.0.4"
langchain-community = "^0.2.0"
qdrant-client = "^1.9.1"
boto3 = "^1.34.111"
langchain-qdrant = "^0.1.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
isort = "^5.13.2"
black = "^24.4.2"
autoflake = "^2.3.1"
pylint = "^3.2.2"
pre-commit = "^3.7.1"
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.7"
psycopg2-binary = "^2.9.9"
factory-boy = "^3.3.0"
pytest-factoryboy = "^2.7.0"
typer = "^0.12.3"
ipython = "^8.24.0"
sqlalchemy-utils = "^0.41.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "tests"
line_length = 88
multi_line_output = 3
use_parentheses = true
skip_glob = ".venv/*,.aws-sam/*,migrations/*"

[tool.black]
target-version = ['py311']

[tool.pylint.messages_control]
disable = [
    "C0103",
    "C0114",
    "R0903",
    "E1136"
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.similarities]
ignore-signatures = true
ignore-imports = true

[tool.pytest.ini_options]
testpaths = "tests"
asyncio_mode = "auto"
filterwarnings = [
    "error",
]

[tool.mypy]
strict = true
exclude = ["tests", "dist", "migrations"]
ignore_missing_imports = true


[tool.autoflake]
quiet = true
remove-all-unused-imports = true
recursive = true

[tool.coverage.report]
fail_under = 90
omit = [
    "*/migrations/*",
    "*/settings/*",
    "*/tests/*",
    "*manage.py"
]
exclude_also = [
    "pragma: no cover",
    "def __repr__",
    "@abstract",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
